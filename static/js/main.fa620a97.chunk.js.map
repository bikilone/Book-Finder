{"version":3,"sources":["Input.js","Card.js","LandingPage.js","CardList.js","service/helper.js","service/dataservice.js","Error.js","SinglePage.js","Header.js","App.js","service/localStorage.js","service/fetchingData.js","serviceWorker.js","index.js"],"names":["Input","props","inputText","onInputChange","onSubmit","clearInput","onClick","react_default","a","createElement","action","className","type","onChange","value","Card","_props$card","card","title","author","publisher","image","link","id","bookshelf","style","length","forEach","book","src","alt","e","saveInBookshelf","fill","xmlns","d","transform","Link","to","concat","LandingPage","message","CardList","cards","map","i","Card_Card","key","LandingPage_LandingPage","trim","data","slice","DataService","Object","classCallCheck","this","authors","join","trimAuthors","imageLinks","thumbnail","previewLink","categories","description","pageCount","publishedDate","Eror","error","SinglePage","_this","possibleConstructorReturn","getPrototypeOf","call","state","setState","_this2","fetch","then","json","volumeInfo","console","log","catch","eror","_this3","_this$state$data","industryIdentifiers","height","Component","Header","App","event","input","target","preventDefault","loading","errorType","fetchingData","singlePage","undefined","find","JSON","parse","localStorage","getItem","push","objectSpread","setItem","stringify","checkLocalStorage","books","filter","bind","assertThisInitialized","res","ok","Error","totalItems","items","Switch","Route","exact","path","render","_React$createElement","Input_Input","marginTop","react_loader_spinner_default","color","defineProperty","CardList_CardList","SinglePage_SinglePage","match","params","Boolean","window","location","hostname","ReactDOM","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa620a97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./css/Input.css\";\r\n\r\nexport default function Input(props) {\r\n  const { inputText, onInputChange, onSubmit, clearInput, onClick } = props;\r\n\r\n  return (\r\n    <div>\r\n      <form action=\"\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n          value={inputText}\r\n        />\r\n        <span onClick={clearInput}>X</span>\r\n        <button onClick={onClick} className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./css/Card.css\";\r\n\r\nexport default function Card(props) {\r\n  const { title, author, publisher, link, image } = props.card;\r\n  const { id, bookshelf } = props;\r\n  var style = \"white\";\r\n\r\n  /// checking if there is some book in bookshelf to set up red stars in view\r\n  if (bookshelf.length > 0) {\r\n    bookshelf.forEach(book => {\r\n      if (book.id == id) {\r\n        style = \"#ff3d02\";\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={image} alt=\"\" />\r\n      <div className=\"card-right\">\r\n        <div className=\"card-rigth-top\">\r\n          <h1>{title}</h1>\r\n          <svg\r\n            onClick={e => {\r\n              props.saveInBookshelf(e, props.id, bookshelf, props.card);\r\n            }}\r\n          >\r\n            <path\r\n              fill={style}\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"a\"\r\n              d=\"M33.688,36.755h11.5l3.584-10.911L52.3,36.755H63.8l-9.307,6.739,3.53,10.965L48.771,47.72l-9.307,6.739,3.53-10.965Z\"\r\n              transform=\"translate(-33.688 -25.844)\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <p className=\"author\">By: {author}</p>\r\n        <p className=\"publisher\">Published By: {publisher}</p>\r\n        <Link to={`/${id}`}>\r\n          <button className=\"button\">See this Book</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./css/LandingPage.css\";\r\n\r\nexport default function LandingPage(props) {\r\n  return (\r\n    <div className=\"landing\">\r\n      {props.message ? props.message : \"Nothing yet\"}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./css/CardList.css\";\r\nimport LandingPage from \"./LandingPage\";\r\n\r\nexport default function CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.cards.length > 0 ? (\r\n        props.cards.map((card, i) => {\r\n          return (\r\n            <Card\r\n              card={card}\r\n              key={card.id}\r\n              id={card.id}\r\n              saveInBookshelf={props.saveInBookshelf}\r\n              bookshelf={props.bookshelf}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <LandingPage message={\"Empty bookshelf\"} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export function trim(data) {\r\n  if (data.length > 50) {\r\n    return data.slice(0, 40) + \"...\";\r\n  } else return data;\r\n}\r\nexport function trimAuthors(data) {\r\n  if (data.length > 1) {\r\n    return trim(data.join(\", \"));\r\n  } else return trim(data);\r\n}\r\n","import { trim, trimAuthors } from \"./helper\";\r\n\r\nclass DataService {\r\n  constructor(data, id) {\r\n    this.title = data.title ? trim(data.title) : data.title;\r\n    this.author = data.authors ? trimAuthors(data.authors) : \"Unknown author\";\r\n    this.publisher = data.publisher\r\n      ? trim(data.publisher)\r\n      : \"Unknown publisher\";\r\n    this.image = data.imageLinks\r\n      ? data.imageLinks.thumbnail\r\n      : \"https://image.freepik.com/free-vector/books-stack-realistic_1284-4735.jpg\";\r\n    this.link = data.previewLink;\r\n    this.id = id;\r\n    this.categories = data.categories ? data.categories : \"Unknown\";\r\n    this.description = data.description ? trim(data.description, 200) : \"n/a\";\r\n    this.pageCount = data.pageCount ? data.pageCount : \"n/a\";\r\n    this.publishedDate = data.publishedDate ? data.publishedDate : \"n/a\";\r\n  }\r\n}\r\nexport default DataService;\r\n","import React from \"react\";\r\nimport \"./css/Error.css\";\r\n\r\nexport default function Eror(props) {\r\n  switch (props.error) {\r\n    case \"empty input\":\r\n      return <div className=\"error\">You must enter something in input</div>;\r\n      break;\r\n    case \"empty response\":\r\n      return <div className=\"error\">There is no such book</div>;\r\n      break;\r\n    case \"something went wrong\":\r\n      return <div className=\"error\">Something went wrong</div>;\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport DataService from \"./service/dataservice\";\r\n\r\nexport default class SinglePage extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      id: props.id,\r\n      saveInBookshelf: props.saveInBookshelf,\r\n      bookshelf: props.bookshelf,\r\n      data: \"\"\r\n    };\r\n  }\r\n  componentWillReceiveProps(props) {\r\n    this.setState({\r\n      bookshelf: props.bookshelf\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    const key = \"AIzaSyAOaVBnu7fgtzZVvuSjWw9MaGmDE3P73sA\";\r\n    fetch(\r\n      `https://www.googleapis.com/books/v1/volumes/${this.state.id}?key=${key}`\r\n    )\r\n      .then(data => data.json())\r\n      .then(data => new DataService(data.volumeInfo, this.state.id))\r\n      .then(data => {\r\n        this.setState({\r\n          data: data\r\n        });\r\n        console.log(data);\r\n      })\r\n      .catch(eror => console.log(eror));\r\n  }\r\n  render() {\r\n    var style = \"white\";\r\n    /// checking if there is some book in bookshelf to set up red stars in view\r\n    ///\r\n    if (this.state.bookshelf.length > 0) {\r\n      this.state.bookshelf.forEach(book => {\r\n        if (book.id == this.state.id) {\r\n          style = \"#ff3d02\";\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (typeof this.state.data !== \"string\") {\r\n      const {\r\n        categories,\r\n        description,\r\n        industryIdentifiers,\r\n        pageCount,\r\n        publishedDate,\r\n        image,\r\n        title,\r\n        publisher,\r\n        author\r\n      } = this.state.data;\r\n      // console.log(author);\r\n      return (\r\n        <div className=\"card single-card\">\r\n          <img src={image} alt=\"\" />\r\n          <div className=\"card-right\" style={{ height: \"500px\" }}>\r\n            <div className=\"card-rigth-top\">\r\n              <h1>{title}</h1>\r\n              <svg\r\n                onClick={e => {\r\n                  this.state.saveInBookshelf(\r\n                    e,\r\n                    this.state.id,\r\n                    this.state.bookshelf,\r\n                    this.state.data\r\n                  );\r\n                }}\r\n              >\r\n                <path\r\n                  fill={style}\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"a\"\r\n                  d=\"M33.688,36.755h11.5l3.584-10.911L52.3,36.755H63.8l-9.307,6.739,3.53,10.965L48.771,47.72l-9.307,6.739,3.53-10.965Z\"\r\n                  transform=\"translate(-33.688 -25.844)\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <p className=\"author\">By: {author}</p>\r\n            <p className=\"publisher\">Category: {categories[0]}</p>\r\n            <p className=\"publisher\">Description: {description}</p>\r\n            <p className=\"publisher\">PageCount: {pageCount}</p>\r\n            <p className=\"publisher\">Published date: {publishedDate}</p>\r\n            <p className=\"publisher\">Published By: {publisher}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>sdaf</div>;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Input.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\" className=\"main-h1\">\r\n        Book | Finder\r\n      </Link>\r\n      <Link className=\"main-h1 bookshelf search-button\" to=\"/bookshelf\">\r\n        Bookshelf\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport Input from \"./Input\";\r\nimport CardList from \"./CardList\";\r\nimport DataService from \"./service/dataservice\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Error from \"./Error\";\r\nimport LandingPage from \"./LandingPage\";\r\nimport SinglePage from \"./SinglePage\";\r\nimport Header from \"./Header\";\r\nimport { saveInBookshelf, checkLocalStorage } from \"./service/localStorage\";\r\nimport { fetchingData } from \"./service/fetchingData\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      cards: [],\r\n      loading: false,\r\n      error: false,\r\n      errorType: \"\",\r\n      bookshelf: [],\r\n      singlePage: false\r\n    };\r\n    this.saveInBookshelf = saveInBookshelf.bind(this);\r\n    this.checkLocalStorage = checkLocalStorage.bind(this);\r\n    this.fetchingData = fetchingData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkLocalStorage();\r\n  }\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      input: event.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // setting loader\r\n    this.setState({\r\n      loading: true,\r\n      error: false,\r\n      errorType: \"\"\r\n    });\r\n    // mistake - empty input\r\n    if (this.state.input.length === 0) {\r\n      this.setState({ error: true, errorType: \"empty input\" });\r\n    } else {\r\n      // fetching\r\n      this.fetchingData();\r\n    }\r\n  };\r\n  // making sure that mistake is removed\r\n  onClick = () => {\r\n    this.setState({ error: false, errorType: \"\" });\r\n  };\r\n  clearInput = () => {\r\n    this.setState({ input: \"\" });\r\n  };\r\n  render() {\r\n    // console.log(this.state.bookshelf);\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <div>\r\n                <Input\r\n                  clearInput={this.clearInput}\r\n                  inputText={this.state.input}\r\n                  onInputChange={this.onInputChange}\r\n                  onSubmit={this.onSubmit}\r\n                  onClick={this.onClick}\r\n                />\r\n                {// first check is there any error\r\n                this.state.error ? (\r\n                  <Error error={this.state.errorType} />\r\n                ) : this.state.loading ? ( // if there is no error check if the page is loading\r\n                  <div style={{ marginTop: \"100px\" }}>\r\n                    <Loader\r\n                      type=\"Circles\"\r\n                      color=\"#ff6f00\"\r\n                      marginTop=\"100px\"\r\n                      marginTop={100}\r\n                      height={200}\r\n                      width={200}\r\n                      className=\"loader\"\r\n                    />\r\n                  </div>\r\n                ) : this.state.cards.length > 0 ? ( // if there is no eror and page is not laoding check if you need to show card list or landing page\r\n                  <CardList\r\n                    bookshelf={this.state.bookshelf}\r\n                    saveInBookshelf={this.saveInBookshelf}\r\n                    cards={this.state.cards}\r\n                    loading={this.state.loading}\r\n                  />\r\n                ) : (\r\n                  <LandingPage />\r\n                )}\r\n              </div>\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/bookshelf\"\r\n            render={() => (\r\n              <CardList\r\n                bookshelf={this.state.bookshelf}\r\n                saveInBookshelf={this.saveInBookshelf}\r\n                cards={this.state.bookshelf}\r\n                loading={this.state.loading}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/:id\"\r\n            render={props => {\r\n              return (\r\n                <SinglePage\r\n                  id={props.match.params.id}\r\n                  saveInBookshelf={this.saveInBookshelf}\r\n                  bookshelf={this.state.bookshelf}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export function saveInBookshelf(e, id, bookshelf, data) {\r\n  // is there bookshelf\r\n  if (bookshelf.length > 0) {\r\n    // check is there an id inside\r\n    if (bookshelf.find(e => e.id == id) == undefined) {\r\n      // if there is not id inside\r\n      const bookshelf = JSON.parse(localStorage.getItem(\"bookshelf\"));\r\n      bookshelf.push({ id, ...data });\r\n      localStorage.setItem(\"bookshelf\", JSON.stringify(bookshelf));\r\n      this.checkLocalStorage();\r\n    } else {\r\n      console.log(\"ever\");\r\n      // if there is id inside, remove id\r\n      var books = JSON.parse(localStorage.getItem(\"bookshelf\"));\r\n      books = books.filter(book => book.id !== id);\r\n      localStorage.setItem(\"bookshelf\", JSON.stringify(books));\r\n      this.checkLocalStorage();\r\n    }\r\n  } else {\r\n    // if bookshelf does not exist\r\n    const bookshelf = [];\r\n    bookshelf.push({ id, ...data });\r\n    localStorage.setItem(\"bookshelf\", JSON.stringify(bookshelf));\r\n    this.checkLocalStorage();\r\n  }\r\n}\r\n\r\nexport function checkLocalStorage() {\r\n  if (localStorage.getItem(\"bookshelf\") !== null) {\r\n    const bookshelf = JSON.parse(localStorage.getItem(\"bookshelf\"));\r\n    this.setState({\r\n      bookshelf: bookshelf\r\n    });\r\n  } else {\r\n    this.setState({\r\n      bookshelf: []\r\n    });\r\n  }\r\n}\r\n","import DataService from \"./dataservice\";\r\n\r\nexport function fetchingData() {\r\n  const key = \"AIzaSyAOaVBnu7fgtzZVvuSjWw9MaGmDE3P73sA\";\r\n  const url = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n  const field = `&&fields=items(volumeInfo/title, volumeInfo/authors, volumeInfo/publisher,volumeInfo/imageLinks, volumeInfo/previewLink)`;\r\n  fetch(`${url + this.state.input}&key=${key}&maxResults=40&orderBy=relevance`)\r\n    .then(res => {\r\n      // handling fetch errors\r\n      // console.log(res);\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n      // categories, description, industryIdentifiers, pageCount, publishedDate,\r\n      const books = [];\r\n      // mistake - empty response\r\n      if (data.totalItems === 0) {\r\n        this.setState({ error: true, errorType: \"empty response\" });\r\n      } else {\r\n        this.setState({ error: false, errorType: \"\" });\r\n        data.items.forEach((book, i) => {\r\n          // console.log(book.volumeInfo.authors);\r\n          books.push(new DataService(book.volumeInfo, book.id));\r\n        });\r\n      }\r\n      // removing loader and setting book cards\r\n\r\n      this.setState({\r\n        cards: books,\r\n        loading: false\r\n      });\r\n    })\r\n    .catch(error => {\r\n      this.setState({\r\n        error: true,\r\n        errorType: \"something went wrong\"\r\n      });\r\n    });\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}