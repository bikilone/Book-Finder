{"version":3,"sources":["Input.js","Card.js","CardList.js","service/helper.js","service/dataservice.js","Error.js","LandingPage.js","SinglePage.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","inputText","onInputChange","onSubmit","clearInput","onClick","react_default","a","createElement","className","action","type","onChange","value","Card","_props$card","card","title","author","publisher","image","link","id","src","alt","saveInBookshelf","xmlns","d","transform","Link","to","concat","CardList","cards","map","i","Card_Card","key","trim","data","length","slice","DataService","Object","classCallCheck","this","authors","join","trimAuthors","imageLinks","thumbnail","previewLink","Eror","error","LandingPage","SinglePage","App","_this","possibleConstructorReturn","getPrototypeOf","call","e","target","style","fill","event","setState","input","preventDefault","loading","errorType","state","fetch","then","res","ok","json","Error","books","console","log","totalItems","items","forEach","book","push","volumeInfo","catch","_React$createElement","_this2","Input_Input","marginTop","react_loader_spinner_default","color","defineProperty","Switch","Route","exact","path","render","CardList_CardList","component","LandingPage_LandingPage","Component","Boolean","window","location","hostname","match","ReactDOM","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bceb2abb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./css/Input.css\";\r\n\r\nexport default function Input(props) {\r\n  const { inputText, onInputChange, onSubmit, clearInput, onClick } = props;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"main-h1\">Book | Finder</h1>\r\n      <form action=\"\" onSubmit={onSubmit}>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          onChange={onInputChange}\r\n          value={inputText}\r\n        />\r\n        <span onClick={clearInput}>X</span>\r\n        <button onClick={onClick} className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./css/Card.css\";\r\n\r\nexport default function Card(props) {\r\n  const { title, author, publisher, link, image, id } = props.card;\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={image} alt=\"\" />\r\n      <div className=\"card-right\">\r\n        <div className=\"card-rigth-top\">\r\n          <h1>{title}</h1>\r\n          <svg onClick={props.saveInBookshelf}>\r\n            <path\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"a\"\r\n              d=\"M33.688,36.755h11.5l3.584-10.911L52.3,36.755H63.8l-9.307,6.739,3.53,10.965L48.771,47.72l-9.307,6.739,3.53-10.965Z\"\r\n              transform=\"translate(-33.688 -25.844)\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <p className=\"author\">By: {author}</p>\r\n        <p className=\"publisher\">Published By: {publisher}</p>\r\n        <Link to={`/${id}`}>\r\n          <button className=\"button\">See this Book</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./css/CardList.css\";\r\n\r\nexport default function CardList(props) {\r\n  // console.log(props.saveInBookshelf);\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.cards.map((card, i) => {\r\n        return (\r\n          <Card\r\n            card={card}\r\n            key={card.id}\r\n            id={card.id}\r\n            saveInBookshelf={props.saveInBookshelf}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","export function trim(data) {\r\n  if (data.length > 50) {\r\n    return data.slice(0, 40) + \"...\";\r\n  } else return data;\r\n}\r\nexport function trimAuthors(data) {\r\n  if (data.length > 1) {\r\n    return trim(data.join(\", \"));\r\n  } else return trim(data);\r\n}\r\n","import { trim, trimAuthors } from \"./helper\";\r\n\r\nclass DataService {\r\n  constructor(data, id) {\r\n    this.title = data.title ? trim(data.title) : data.title;\r\n    this.author = data.authors ? trimAuthors(data.authors) : \"Unknown author\";\r\n    this.publisher = data.publisher\r\n      ? trim(data.publisher)\r\n      : \"Unknown publisher\";\r\n    this.image = data.imageLinks\r\n      ? data.imageLinks.thumbnail\r\n      : \"https://image.freepik.com/free-vector/books-stack-realistic_1284-4735.jpg\";\r\n    this.link = data.previewLink;\r\n    this.id = id;\r\n  }\r\n}\r\nexport default DataService;\r\n","import React from \"react\";\r\nimport \"./css/Error.css\";\r\n\r\nexport default function Eror(props) {\r\n  switch (props.error) {\r\n    case \"empty input\":\r\n      return <div className=\"error\">You must enter something in input</div>;\r\n      break;\r\n    case \"empty response\":\r\n      return <div className=\"error\">There is no such book</div>;\r\n      break;\r\n    case \"something went wrong\":\r\n      return <div className=\"error\">Something went wrong</div>;\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./css/LandingPage.css\";\r\n\r\nexport default function LandingPage() {\r\n  return <div className=\"landing\">Nothing yet :D</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SinglePage() {\r\n  return <div>sdsdfa</div>;\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nimport Input from \"./Input\";\nimport CardList from \"./CardList\";\nimport DataService from \"./service/dataservice\";\nimport Loader from \"react-loader-spinner\";\nimport Error from \"./Error\";\nimport LandingPage from \"./LandingPage\";\nimport SinglePage from \"./SinglePage\";\n\nimport \"./css/App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      cards: [],\n      loading: false,\n      error: false,\n      errorType: \"\"\n    };\n  }\n  saveInBookshelf = e => {\n    if (e.target.style.fill === \"white\") {\n      e.target.style.fill = \"blue\";\n      // push in local storage setState\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      input: event.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const key = \"AIzaSyAOaVBnu7fgtzZVvuSjWw9MaGmDE3P73sA\";\n    const url = \"https://www.googleapis.com/books/v1/volumes?q=\";\n    const field = `&fields=items(volumeInfo/title, volumeInfo/authors, volumeInfo/publisher,volumeInfo/imageLinks, volumeInfo/previewLink)`;\n    // setting loader\n    this.setState({\n      loading: true,\n      error: false,\n      errorType: \"\"\n    });\n    // mistake - empty input\n    if (this.state.input.length === 0) {\n      this.setState({ error: true, errorType: \"empty input\" });\n    } else {\n      // fetching\n      fetch(\n        `${url + this.state.input}&key=${key}&maxResults=40&orderBy=relevance`\n      )\n        .then(res => {\n          // handling fetch errors\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error(\"Something went wrong\");\n          }\n        })\n        .then(data => {\n          const books = [];\n          console.log(data);\n          // mistake - empty response\n          if (data.totalItems === 0) {\n            this.setState({ error: true, errorType: \"empty response\" });\n          } else {\n            this.setState({ error: false, errorType: \"\" });\n            data.items.forEach((book, i) => {\n              // console.log(book.volumeInfo.authors);\n              books.push(new DataService(book.volumeInfo, book.id));\n            });\n          }\n          // removing loader and setting book cards\n          this.setState({\n            cards: books,\n            loading: false\n          });\n        })\n        .catch(error => {\n          this.setState({\n            error: true,\n            errorType: \"something went wrong\"\n          });\n        });\n    }\n  };\n  // making sure that mistake is removed\n  onClick = () => {\n    this.setState({ error: false, errorType: \"\" });\n  };\n  clearInput = () => {\n    this.setState({ input: \"\" });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Input\n          clearInput={this.clearInput}\n          inputText={this.state.input}\n          onInputChange={this.onInputChange}\n          onSubmit={this.onSubmit}\n          onClick={this.onClick}\n        />\n        {// handling mistakes\n        this.state.error ? (\n          <Error error={this.state.errorType} />\n        ) : // checking if page is loading or ready\n        this.state.loading ? (\n          <div style={{ marginTop: \"100px\" }}>\n            <Loader\n              type=\"Circles\"\n              color=\"#ff6f00\"\n              marginTop=\"100px\"\n              marginTop={100}\n              height={200}\n              width={200}\n              className=\"loader\"\n            />\n          </div>\n        ) : this.state.cards.length > 0 ? ( // landing page issue\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <CardList\n                  saveInBookshelf={this.saveInBookshelf}\n                  cards={this.state.cards}\n                  loading={this.state.loading}\n                />\n              )}\n            />\n            <Route exact path=\"/:id\" component={SinglePage} />\n          </Switch>\n        ) : (\n          <LandingPage />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}